// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl
// Solved by: Ricardo Marques

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=sel[0], out=notSel0);
    Not(in=sel[1], out=notSel1);

    Fill16(a=notSel0, out=notSel016);
    Fill16(a=notSel1, out=notSel116);
    Fill16(a=sel[0], out=sel016);
    Fill16(a=sel[1], out=sel116);

    And16(a=notSel016, b=a, out=firstAnd01);
    And16(a=notSel116, b=firstAnd01, out=secondAnd01);

    And16(a=sel016, b=b, out=firstAnd02);
    And16(a=notSel116, b=firstAnd02, out=secondAnd02);

    And16(a=sel116, b=c, out=firstAnd03);
    And16(a=notSel016, b=firstAnd03, out=secondAnd03);

    And16(a=sel016, b=d, out=firstAnd04);
    And16(a=sel116, b=firstAnd04, out=secondAnd04);

    Or16(a=secondAnd01, b=secondAnd02, out=orA);
    Or16(a=secondAnd03, b=secondAnd04, out=orB);
    Or16(a=orA, b=orB, out=out);
}
